[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-voice-dialer"
version = "1.0.0"
description = "Enterprise-grade AI-powered outbound voice dialer with real-time conversation capabilities"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AI Voice Dialer Contributors"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Telephony",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.29.0",
    "alembic>=1.12.0",
    "redis>=5.0.0",
    "boto3>=1.34.0",
    "anthropic>=0.7.0",
    "deepgram-sdk>=3.2.0",
    "elevenlabs>=0.2.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "celery>=5.3.0",
    "prometheus-client>=0.17.0",
    "structlog>=23.1.0",
    "httpx>=0.25.0",
    "aiofiles>=23.2.0",
    "websockets>=11.0.0",
    "phonenumbers>=8.13.0",
    "python-dateutil>=2.8.0",
    "pytz>=2023.3",
    "numpy>=1.25.0",
    "pandas>=2.1.0",
    "scikit-learn>=1.3.0",
    "scipy>=1.11.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "ipython>=8.14.0",
    "rich>=13.5.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/ai-voice-dialer"
Repository = "https://github.com/yourusername/ai-voice-dialer"
Documentation = "https://github.com/yourusername/ai-voice-dialer/blob/main/README.md"
Issues = "https://github.com/yourusername/ai-voice-dialer/issues"
Changelog = "https://github.com/yourusername/ai-voice-dialer/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["app"]
known_third_party = ["fastapi", "sqlalchemy", "boto3", "anthropic", "deepgram", "elevenlabs"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "migrations",
    "build",
    "dist",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "anthropic.*",
    "deepgram.*",
    "elevenlabs.*",
    "celery.*",
    "prometheus_client.*",
    "phonenumbers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "ai: marks tests that require AI service APIs",
]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "too-many-branches",
    "too-many-statements",
    "duplicate-code",
]

[tool.pylint.format]
max-line-length = 88 