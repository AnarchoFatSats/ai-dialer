"""Add multi-agent system tables

Revision ID: 8e9299eec4ce
Revises: 
Create Date: 2025-07-08 20:16:35.603879

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8e9299eec4ce'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_pools',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('region', sa.String(length=50), nullable=False),
    sa.Column('personality_config', sa.JSON(), nullable=False),
    sa.Column('active_hours', sa.JSON(), nullable=False),
    sa.Column('dialing_pattern', sa.JSON(), nullable=False),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('answer_rate', sa.Float(), nullable=True),
    sa.Column('reputation_score', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_blocked', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('call_routing_rules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('conditions', sa.JSON(), nullable=False),
    sa.Column('routing_config', sa.JSON(), nullable=False),
    sa.Column('times_used', sa.Integer(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('compliance_tracking',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('is_on_dnc_federal', sa.Boolean(), nullable=True),
    sa.Column('is_on_dnc_state', sa.Boolean(), nullable=True),
    sa.Column('dnc_states', sa.JSON(), nullable=True),
    sa.Column('has_consent', sa.Boolean(), nullable=True),
    sa.Column('consent_type', sa.String(length=50), nullable=True),
    sa.Column('consent_date', sa.DateTime(), nullable=True),
    sa.Column('consent_source', sa.String(length=100), nullable=True),
    sa.Column('has_opted_out', sa.Boolean(), nullable=True),
    sa.Column('opt_out_date', sa.DateTime(), nullable=True),
    sa.Column('opt_out_method', sa.String(length=50), nullable=True),
    sa.Column('complaint_count', sa.Integer(), nullable=True),
    sa.Column('last_complaint_date', sa.DateTime(), nullable=True),
    sa.Column('complaint_details', sa.JSON(), nullable=True),
    sa.Column('last_contact_date', sa.DateTime(), nullable=True),
    sa.Column('last_contact_result', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agent_numbers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('did_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('call_count', sa.Integer(), nullable=True),
    sa.Column('success_count', sa.Integer(), nullable=True),
    sa.Column('answer_rate', sa.Float(), nullable=True),
    sa.Column('spam_score', sa.Float(), nullable=True),
    sa.Column('health_score', sa.Float(), nullable=True),
    sa.Column('is_blocked', sa.Boolean(), nullable=True),
    sa.Column('blocked_reason', sa.String(length=255), nullable=True),
    sa.Column('blocked_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('calls_today', sa.Integer(), nullable=True),
    sa.Column('calls_this_week', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_pools.id'], ),
    sa.ForeignKeyConstraint(['did_id'], ['did_pool.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cnam_registrations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('did_id', sa.UUID(), nullable=False),
    sa.Column('display_name', sa.String(length=15), nullable=False),
    sa.Column('business_name', sa.String(length=100), nullable=False),
    sa.Column('registration_type', sa.String(length=50), nullable=True),
    sa.Column('is_registered', sa.Boolean(), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('carrier_registrations', sa.JSON(), nullable=True),
    sa.Column('verification_code', sa.String(length=20), nullable=True),
    sa.Column('verification_status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['did_id'], ['did_pool.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('number_reputation',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('did_id', sa.UUID(), nullable=False),
    sa.Column('carrier', sa.String(length=50), nullable=False),
    sa.Column('reputation_score', sa.Float(), nullable=True),
    sa.Column('spam_likelihood', sa.Float(), nullable=True),
    sa.Column('is_spam_flagged', sa.Boolean(), nullable=True),
    sa.Column('is_scam_flagged', sa.Boolean(), nullable=True),
    sa.Column('is_blocked', sa.Boolean(), nullable=True),
    sa.Column('current_label', sa.String(length=100), nullable=True),
    sa.Column('label_source', sa.String(length=50), nullable=True),
    sa.Column('external_id', sa.String(length=100), nullable=True),
    sa.Column('last_checked_at', sa.DateTime(), nullable=True),
    sa.Column('reputation_history', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['did_id'], ['did_pool.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('call_logs', sa.Column('aws_contact_id', sa.String(length=100), nullable=True))
    op.add_column('call_logs', sa.Column('aws_contact_flow_id', sa.String(length=100), nullable=True))
    op.add_column('call_logs', sa.Column('phone_number', sa.String(length=20), nullable=True))
    op.add_column('call_logs', sa.Column('call_status', sa.String(length=50), nullable=True))
    op.add_column('call_logs', sa.Column('call_start', sa.DateTime(), nullable=True))
    op.add_column('call_logs', sa.Column('call_answered', sa.DateTime(), nullable=True))
    op.add_column('call_logs', sa.Column('objections_count', sa.Integer(), nullable=True))
    op.add_column('call_logs', sa.Column('call_duration', sa.Integer(), nullable=True))
    op.add_column('call_logs', sa.Column('call_disposition', sa.String(length=50), nullable=True))
    op.add_column('call_logs', sa.Column('transfer_attempted', sa.Boolean(), nullable=True))
    op.add_column('call_logs', sa.Column('transfer_number', sa.String(length=20), nullable=True))
    op.add_column('call_logs', sa.Column('transfer_time', sa.DateTime(), nullable=True))
    op.add_column('call_logs', sa.Column('transfer_failed', sa.Boolean(), nullable=True))
    op.add_column('call_logs', sa.Column('transfer_successful', sa.Boolean(), nullable=True))
    op.add_column('call_logs', sa.Column('transfer_failure_reason', sa.String(length=100), nullable=True))
    op.add_column('call_logs', sa.Column('ai_disconnected_at', sa.DateTime(), nullable=True))
    op.add_column('call_logs', sa.Column('agent_pool_id', sa.UUID(), nullable=True))
    op.drop_constraint('call_logs_twilio_call_sid_key', 'call_logs', type_='unique')
    op.drop_index('idx_call_logs_twilio_sid', table_name='call_logs')
    op.create_index('idx_call_logs_aws_contact_id', 'call_logs', ['aws_contact_id'], unique=False)
    op.create_unique_constraint(None, 'call_logs', ['aws_contact_id'])
    op.create_foreign_key(None, 'call_logs', 'agent_pools', ['agent_pool_id'], ['id'])
    op.drop_column('call_logs', 'twilio_conference_sid')
    op.drop_column('call_logs', 'twilio_call_sid')
    op.add_column('campaigns', sa.Column('call_timeout_seconds', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('retry_attempts', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('retry_delay_minutes', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('transfer_number', sa.String(length=20), nullable=True))
    op.add_column('campaigns', sa.Column('backup_transfer_number', sa.String(length=20), nullable=True))
    op.add_column('campaigns', sa.Column('transfer_on_qualification', sa.Boolean(), nullable=True))
    op.add_column('campaigns', sa.Column('ai_prompt', sa.Text(), nullable=True))
    op.add_column('campaigns', sa.Column('greeting_message', sa.Text(), nullable=True))
    op.add_column('campaigns', sa.Column('objection_responses', postgresql.ARRAY(sa.Text()), nullable=True))
    op.add_column('campaigns', sa.Column('system_prompt', sa.Text(), nullable=True))
    op.add_column('campaigns', sa.Column('greeting_prompt', sa.Text(), nullable=True))
    op.add_column('campaigns', sa.Column('qualification_prompt', sa.Text(), nullable=True))
    op.add_column('campaigns', sa.Column('presentation_prompt', sa.Text(), nullable=True))
    op.add_column('campaigns', sa.Column('objection_prompt', sa.Text(), nullable=True))
    op.add_column('campaigns', sa.Column('closing_prompt', sa.Text(), nullable=True))
    op.add_column('campaigns', sa.Column('ai_temperature', sa.Float(), nullable=True))
    op.add_column('campaigns', sa.Column('ai_max_tokens', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('ai_response_length', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('voice_id', sa.String(length=50), nullable=True))
    op.add_column('campaigns', sa.Column('voice_speed', sa.Float(), nullable=True))
    op.add_column('campaigns', sa.Column('voice_pitch', sa.Float(), nullable=True))
    op.add_column('campaigns', sa.Column('voice_emphasis', sa.String(length=20), nullable=True))
    op.add_column('campaigns', sa.Column('voice_model', sa.String(length=50), nullable=True))
    op.add_column('campaigns', sa.Column('conversation_style', sa.String(length=50), nullable=True))
    op.add_column('campaigns', sa.Column('conversation_config', sa.JSON(), nullable=True))
    op.add_column('campaigns', sa.Column('objections_before_transfer', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('training_status', sa.String(length=20), nullable=True))
    op.add_column('campaigns', sa.Column('training_started_at', sa.DateTime(), nullable=True))
    op.add_column('campaigns', sa.Column('training_config', sa.JSON(), nullable=True))
    op.add_column('campaigns', sa.Column('ab_test_config', sa.JSON(), nullable=True))
    op.add_column('campaigns', sa.Column('aws_contact_flow_id', sa.String(length=100), nullable=True))
    op.add_column('campaigns', sa.Column('conversion_rate', sa.Float(), nullable=True))
    op.add_column('campaigns', sa.Column('agent_pool_ids', sa.JSON(), nullable=True))
    op.add_column('campaigns', sa.Column('routing_strategy', sa.String(length=50), nullable=True))
    op.add_column('campaigns', sa.Column('number_pool_size', sa.Integer(), nullable=True))
    op.add_column('did_pool', sa.Column('aws_phone_number_id', sa.String(length=100), nullable=True))
    op.add_column('did_pool', sa.Column('aws_phone_number_arn', sa.String(length=500), nullable=True))
    op.drop_column('did_pool', 'twilio_sid')
    op.drop_column('did_pool', 'twilio_friendly_name')
    op.add_column('leads', sa.Column('phone_number', sa.String(length=20), nullable=True))
    op.add_column('leads', sa.Column('lead_score', sa.Float(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('leads', 'lead_score')
    op.drop_column('leads', 'phone_number')
    op.add_column('did_pool', sa.Column('twilio_friendly_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('did_pool', sa.Column('twilio_sid', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_column('did_pool', 'aws_phone_number_arn')
    op.drop_column('did_pool', 'aws_phone_number_id')
    op.drop_column('campaigns', 'number_pool_size')
    op.drop_column('campaigns', 'routing_strategy')
    op.drop_column('campaigns', 'agent_pool_ids')
    op.drop_column('campaigns', 'conversion_rate')
    op.drop_column('campaigns', 'aws_contact_flow_id')
    op.drop_column('campaigns', 'ab_test_config')
    op.drop_column('campaigns', 'training_config')
    op.drop_column('campaigns', 'training_started_at')
    op.drop_column('campaigns', 'training_status')
    op.drop_column('campaigns', 'objections_before_transfer')
    op.drop_column('campaigns', 'conversation_config')
    op.drop_column('campaigns', 'conversation_style')
    op.drop_column('campaigns', 'voice_model')
    op.drop_column('campaigns', 'voice_emphasis')
    op.drop_column('campaigns', 'voice_pitch')
    op.drop_column('campaigns', 'voice_speed')
    op.drop_column('campaigns', 'voice_id')
    op.drop_column('campaigns', 'ai_response_length')
    op.drop_column('campaigns', 'ai_max_tokens')
    op.drop_column('campaigns', 'ai_temperature')
    op.drop_column('campaigns', 'closing_prompt')
    op.drop_column('campaigns', 'objection_prompt')
    op.drop_column('campaigns', 'presentation_prompt')
    op.drop_column('campaigns', 'qualification_prompt')
    op.drop_column('campaigns', 'greeting_prompt')
    op.drop_column('campaigns', 'system_prompt')
    op.drop_column('campaigns', 'objection_responses')
    op.drop_column('campaigns', 'greeting_message')
    op.drop_column('campaigns', 'ai_prompt')
    op.drop_column('campaigns', 'transfer_on_qualification')
    op.drop_column('campaigns', 'backup_transfer_number')
    op.drop_column('campaigns', 'transfer_number')
    op.drop_column('campaigns', 'retry_delay_minutes')
    op.drop_column('campaigns', 'retry_attempts')
    op.drop_column('campaigns', 'call_timeout_seconds')
    op.add_column('call_logs', sa.Column('twilio_call_sid', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('call_logs', sa.Column('twilio_conference_sid', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'call_logs', type_='foreignkey')
    op.drop_constraint(None, 'call_logs', type_='unique')
    op.drop_index('idx_call_logs_aws_contact_id', table_name='call_logs')
    op.create_index('idx_call_logs_twilio_sid', 'call_logs', ['twilio_call_sid'], unique=False)
    op.create_unique_constraint('call_logs_twilio_call_sid_key', 'call_logs', ['twilio_call_sid'])
    op.drop_column('call_logs', 'agent_pool_id')
    op.drop_column('call_logs', 'ai_disconnected_at')
    op.drop_column('call_logs', 'transfer_failure_reason')
    op.drop_column('call_logs', 'transfer_successful')
    op.drop_column('call_logs', 'transfer_failed')
    op.drop_column('call_logs', 'transfer_time')
    op.drop_column('call_logs', 'transfer_number')
    op.drop_column('call_logs', 'transfer_attempted')
    op.drop_column('call_logs', 'call_disposition')
    op.drop_column('call_logs', 'call_duration')
    op.drop_column('call_logs', 'objections_count')
    op.drop_column('call_logs', 'call_answered')
    op.drop_column('call_logs', 'call_start')
    op.drop_column('call_logs', 'call_status')
    op.drop_column('call_logs', 'phone_number')
    op.drop_column('call_logs', 'aws_contact_flow_id')
    op.drop_column('call_logs', 'aws_contact_id')
    op.drop_table('number_reputation')
    op.drop_table('cnam_registrations')
    op.drop_table('agent_numbers')
    op.drop_table('compliance_tracking')
    op.drop_table('call_routing_rules')
    op.drop_table('agent_pools')
    # ### end Alembic commands ###
